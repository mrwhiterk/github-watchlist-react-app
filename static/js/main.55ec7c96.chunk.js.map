{"version":3,"sources":["GitHubUser.js","GitHubUserList.js","App.js","index.js"],"names":["GitHubUser","this","props","ghUserData","login","name","created_at","avatar_url","company","location","blog","public_repos","public_gists","followers","following","className","src","alt","slice","isAdded","type","onClick","addUser","removeUser","bind","Component","GitHubUserList","users","userList","map","val","i","key","App","state","data","username","value","JSON","parse","localStorage","getItem","handleChange","handleSubmit","event","setState","target","preventDefault","xhttp","XMLHttpRequest","onreadystatechange","readyState","status","response","open","setRequestHeader","send","find","user","alert","concat","setItem","stringify","filter","x","id","onSubmit","onChange","placeholder","aria-label","aria-describedby","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55ec7c96.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass GitHubUser extends Component {\n  render() {\n    let {\n      login,\n      name,\n      created_at,\n      avatar_url,\n      company,\n      location,\n      blog,\n      public_repos,\n      public_gists,\n      followers,\n      following\n    } = this.props.ghUserData;\n\n    // console.log('props', this.props);\n    return (\n      <div className=\"ghuser-card row text-left\">\n        <div>\n          <img src={avatar_url} alt=\"profile pic\" />\n        </div>\n        <div>\n          <h3>{name}</h3>\n          <h4>{login}</h4>\n          <p>Member Since: {created_at.slice(0, 10)} </p>\n          <p>Company: {company || 'student'}</p>\n          <p>personal site: {blog || 'n/a'}</p>\n          <p>lives in {location}</p>\n        </div>\n        <div>\n          {/* <p>\n            <a href={followers_url}>Followers</a>{' '}\n          </p> */}\n          <p>public repos: {public_repos}</p>\n          <p>public gists: {public_gists}</p>\n          <p>followers: {followers}</p>\n          <p>following: {following}</p>\n          {!this.props.ghUserData.isAdded && (\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={this.props.addUser}\n            >\n              Add\n            </button>\n          )}\n          {this.props.ghUserData.isAdded && (\n            <button\n              type=\"button\"\n              className=\"btn btn-danger\"\n              onClick={this.props.removeUser.bind(null, login)}\n            >\n              Delete\n            </button>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GitHubUser;\n","import React, { Component } from 'react';\nimport GitHubUser from './GitHubUser';\n\nclass GitHubUserList extends Component {\n  render() {\n    let users = this.props.userList.map((val, i) => {\n      return (\n        <GitHubUser\n          removeUser={this.props.removeUser}\n          ghUserData={val}\n          key={i}\n        />\n      );\n    });\n    return <div className=\"watchlist\">{users}</div>;\n  }\n}\n\nexport default GitHubUserList;\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport GitHubUser from './GitHubUser';\nimport GitHubUserList from './GitHubUserList';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: '',\n      username: '',\n      value: '',\n      users: JSON.parse(localStorage.getItem('users')) || []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.addUser = this.addUser.bind(this);\n    this.removeUser = this.removeUser.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ value: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    let xhttp = new XMLHttpRequest();\n    xhttp.onreadystatechange = () => {\n      if (xhttp.readyState === 4 && xhttp.status === 200) {\n        this.setState(\n          { data: JSON.parse(xhttp.response), value: '' },\n          () => {}\n        );\n      }\n    };\n    xhttp.open('GET', `https://api.github.com/users/${this.state.value}`, true);\n    xhttp.setRequestHeader('Access-Control-Allow-Credentials', true);\n    xhttp.setRequestHeader('Access-Control-Allow-Origin', '*');\n    xhttp.setRequestHeader('Access-Control-Allow-Methods', 'GET');\n    xhttp.setRequestHeader('Access-Control-Allow-Headers', 'application/json');\n    xhttp.send();\n  }\n\n  addUser() {\n    if (\n      !this.state.users.find(user => {\n        return user.login === this.state.data.login;\n      })\n    ) {\n      this.setState(\n        {\n          users: this.state.users.concat([\n            { ...this.state.data, isAdded: true }\n          ])\n        },\n        () => {\n          localStorage.setItem('users', JSON.stringify(this.state.users));\n          this.setState({ data: '' });\n        }\n      );\n    } else {\n      alert(this.state.data.name + ' is already on your list');\n    }\n  }\n\n  removeUser(username) {\n    this.setState(\n      { users: this.state.users.filter(x => x.login !== username) },\n      () => localStorage.setItem('users', JSON.stringify(this.state.users))\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App text-center\">\n        <h1 className=\"m-5\">Github WatchList</h1>\n        <form\n          className=\"mt-5 mb-5\"\n          id=\"searchForm\"\n          onSubmit={this.handleSubmit}\n        >\n          <div className=\"input-group mb-3\">\n            <div className=\"input-group-prepend\">\n              <input\n                className=\"btn btn-outline-secondary\"\n                type=\"submit\"\n                value=\"Submit\"\n                id=\"button-addon1\"\n                onClick={this.handleSubmit}\n              />\n            </div>\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              className=\"form-control\"\n              placeholder=\"enter username\"\n              aria-label=\"Example text with button addon\"\n              aria-describedby=\"button-addon1\"\n            />\n          </div>\n        </form>\n        {this.state.data && (\n          <GitHubUser addUser={this.addUser} ghUserData={this.state.data} />\n        )}\n        <h3>Your List ({this.state.users.length} users)</h3>\n        <GitHubUserList\n          removeUser={this.removeUser}\n          userList={this.state.users}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}